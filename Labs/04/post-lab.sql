-- Q11.
SELECT dept_id
FROM STUDENT
GROUP BY dept_id
HAVING SUM(fee) > 1000000;

-- Q12.
SELECT dept_id
FROM FACULTY
WHERE salary > 100000
GROUP BY dept_id
HAVING COUNT(*) > 5;

--Q13.
DELETE FROM STUDENT
WHERE gpa < (SELECT AVG(gpa) FROM STUDENT);

-- Q14.
DELETE FROM COURSE
WHERE NOT EXISTS (
    SELECT 1 FROM ENROLL WHERE ENROLL.Course_id = COURSE.Course_id
);

-- Q15.
CREATE TABLE HighFee_Students AS
SELECT *
FROM STUDENT
WHERE Fee > (SELECT AVG(Fee) FROM STUDENT);

-- Q16.
INSERT INTO Retired_Faculty
SELECT *
FROM FACULTY
WHERE Join_Date < (SELECT MIN(Join_Date) FROM FACULTY);

-- Q17.
SELECT dept_id, SUM(fee) AS total_fee
FROM STUDENT
GROUP BY dept_id
ORDER BY SUM(fee) DESC
FETCH FIRST ROW ONLY;

-- Q18.
SELECT Course_ID, COUNT(*) AS Enrollment
FROM ENROLL
GROUP BY Course_ID
ORDER BY COUNT(*) DESC
FETCH FIRST 3 ROWS ONLY;  -- or in older Oracle: use WHERE ROWNUM <= 3 in a subquery

-- Q19.
SELECT Student_ID, Name, GPA
FROM STUDENT
WHERE GPA > (SELECT AVG(GPA) FROM STUDENT)
AND Student_ID IN (
    SELECT Student_ID
    FROM ENROLL
    GROUP BY Student_ID
    HAVING COUNT(*) > 3
);

-- Q20.
